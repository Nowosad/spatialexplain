[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 spatialexplain authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/An-introduction-to-spatial-explanations.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"An introduction to spatial explanations","text":"prepare data model, need extract values predictors locations temperature measurements extract(), combine temperature measurements cbind().","code":"temp = extract(predictors, temp_train, ID = FALSE) temp_train = cbind(temp_train, temp) head(temp_train) #> Simple feature collection with 6 features and 7 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 825940.4 ymin: 4541533 xmax: 934920.7 ymax: 4630234 #> Projected CRS: ED50 / UTM zone 30N #>       temp      popdens      coast        dem      ndvi  lst_day lst_night #> 1 17.52610     0.000000  1.1263009  85.905403 0.3656146 24.37792 12.642557 #> 2 16.94795     1.211701  6.7432733  75.001259 0.3990190 28.13341 10.706681 #> 3 17.49233     5.681698  1.7549587   2.556155 0.1987631 25.76198 11.370279 #> 4 15.30838  4752.076660 45.7688789 256.110870 0.3861388 26.97013  8.315234 #> 5 16.56247  1789.268799  6.2198448 303.596924 0.5917153 22.47704 12.101181 #> 6 17.22139 13260.116211  0.7378924  12.070770 0.2349442 24.79462 13.021243 #>                       geom #> 1 POINT (825940.4 4541533) #> 2 POINT (849548.2 4563427) #> 3 POINT (924683.3 4583884) #> 4 POINT (902776.4 4630234) #> 5 POINT (928394.5 4598097) #> 6 POINT (934920.7 4595391)"},{"path":"/articles/An-introduction-to-spatial-explanations.html","id":"regression-model","dir":"Articles","previous_headings":"","what":"Regression model","title":"An introduction to spatial explanations","text":"Now, can build models predict temperature based predictors. first one regression model predicts temperature Celsius whole area predictors raster. Many modeling methods R tools can used build model, vignette, use rpart() function rpart package, builds regression tree model. Next, can use explain() function DALEX package create explainer object model. Explainer universal model wrapper can used explain model set tools.2 explainer can used check various instance dataset-level explanations model, partial dependence plots feature importance.3 However, methods usually inform us spatial distribution model predictions. spatialexplain package comes . function called predict_spatial_parts() can used calculate attributions model (Break , SHAP, Oscillations explanations) observation raster. function requires explainer object predictor’s raster. Additionally, calculation attributions can computationally expensive, function maxcell parameter controls number cells raster used get attributions.  default, predict_spatial_parts() function calculates Break attributions. method quantifies explanatory variable contributes model’s average prediction (‘intercept’) assessing impact prediction values variable fixed sequence. cells raster colored according contribution predictors model prediction. , can see intercept model 15.1 whole area, variables popdens, coast, ndvi influence model prediction. hand, variables dem, lst_day, lst_night affect model prediction differently, depending location. example, dem variable negative influence model prediction mountainous areas – higher elevation, lower temperature.","code":"rpart_model = rpart(temp ~ ., data = st_drop_geometry(temp_train)) rpart_model #> n= 195  #>  #> node), split, n, deviance, yval #>       * denotes terminal node #>  #>  1) root 195 1546.773000 15.101570   #>    2) lst_night< 7.545278 70  286.239700 12.218960   #>      4) dem>=1271.976 9   15.529640  8.157678 * #>      5) dem< 1271.976 61  100.362400 12.818160   #>       10) lst_day< 27.41322 52   52.454960 12.469420   #>         20) lst_night< 5.956942 35   21.516320 11.993630 * #>         21) lst_night>=5.956942 17    6.703209 13.448980 * #>       11) lst_day>=27.41322 9    5.042911 14.833110 * #>    3) lst_night>=7.545278 125  353.141300 16.715830   #>      6) lst_night< 10.0302 69   92.904980 15.557040   #>       12) lst_day< 25.98267 24   13.758720 14.412790 * #>       13) lst_day>=25.98267 45   30.963710 16.167310 * #>      7) lst_night>=10.0302 56   53.423460 18.143620 * regr_exp = explain(rpart_model,                    data = st_drop_geometry(temp_train)[-1],                    y = temp_train$temp) #> Preparation of a new explainer is initiated #>   -> model label       :  rpart  (  default  ) #>   -> data              :  195  rows  6  cols  #>   -> target variable   :  195  values  #>   -> predict function  :  yhat.rpart  will be used (  default  ) #>   -> predicted values  :  No value for predict function target column. (  default  ) #>   -> model_info        :  package rpart , ver. 4.1.23 , task regression (  default  )  #>   -> predicted values  :  numerical, min =  8.157678 , mean =  15.10157 , max =  18.14362   #>   -> residual function :  difference between y and yhat (  default  ) #>   -> residuals         :  numerical, min =  -3.09541 , mean =  1.512235e-15 , max =  2.473572   #>   A new explainer has been created! regr_pps1 = predict_spatial_parts(regr_exp, predictors, maxcell = 500) plot(regr_pps1)"},{"path":"/articles/An-introduction-to-spatial-explanations.html","id":"classification-model","dir":"Articles","previous_headings":"","what":"Classification model","title":"An introduction to spatial explanations","text":"workflow can used classification models. , build classification model predicts temperature cold hot (17 degrees Celsius). use rpart() function rpart package build classification tree model. Next, create explainer object classification model – code almost regression model, except use classification model . Finally, can calculate attributions classification model using predict_spatial_parts() function.  classification model much simpler case.4 average prediction model 0.292 whole area, meaning probability temperature hot 0.292. , lst_night variable impact model prediction, higher values variable increasing probability temperature hot. can find areas south Spain along eastern coast.","code":"temp_train$temp = cut(temp_train$temp,                       breaks = c(-Inf, 17, Inf), labels = c(\"cold\", \"hot\")) rpart_model_clas = rpart(temp ~ ., data = st_drop_geometry(temp_train)) rpart_model_clas #> n= 195  #>  #> node), split, n, loss, yval, (yprob) #>       * denotes terminal node #>  #> 1) root 195 57 cold (0.70769231 0.29230769)   #>   2) lst_night< 10.04327 140  8 cold (0.94285714 0.05714286) * #>   3) lst_night>=10.04327 55  6 hot (0.10909091 0.89090909) * clas_exp = explain(rpart_model_clas,                    data = st_drop_geometry(temp_train)[-1],                    y = temp_train$temp) #> Preparation of a new explainer is initiated #>   -> model label       :  rpart  (  default  ) #>   -> data              :  195  rows  6  cols  #>   -> target variable   :  195  values  #>   -> predict function  :  yhat.rpart  will be used (  default  ) #>   -> predicted values  :  No value for predict function target column. (  default  ) #>   -> model_info        :  package rpart , ver. 4.1.23 , task classification (  default  )  #>   -> model_info        :  Model info detected classification task but 'y' is a factor .  (  WARNING  ) #>   -> model_info        :  By deafult classification tasks supports only numercical 'y' parameter.  #>   -> model_info        :  Consider changing to numerical vector with 0 and 1 values. #>   -> model_info        :  Otherwise I will not be able to calculate residuals or loss function. #>   -> predicted values  :  numerical, min =  0.05714286 , mean =  0.2923077 , max =  0.8909091   #>   -> residual function :  difference between y and yhat (  default  ) #> Warning in Ops.factor(y, predict_function(model, data)): '-' not meaningful for #> factors #>   -> residuals         :  numerical, min =  NA , mean =  NA , max =  NA   #>   A new explainer has been created! clas_pps1 = predict_spatial_parts(clas_exp, predictors, maxcell = 500) plot(clas_pps1)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jakub Nowosad. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nowosad J (2024). spatialexplain: Explore Explain Spatial Machine Learning Models. R package version 0.0.1.","code":"@Manual{,   title = {spatialexplain: Explore and Explain Spatial Machine Learning Models},   author = {Jakub Nowosad},   year = {2024},   note = {R package version 0.0.1}, }"},{"path":"/index.html","id":"spatialexplain","dir":"","previous_headings":"","what":"Explore and Explain Spatial Machine Learning Models","title":"Explore and Explain Spatial Machine Learning Models","text":"goal spatialexplain provide model agnostic tools exploring explaining spatial machine learning models. based DALEX package uses terra package spatial raster data handling.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Explore and Explain Spatial Machine Learning Models","text":"can install development version spatialexplain GitHub :","code":"# install.packages(\"pak\") pak::pak(\"Nowosad/spatialexplain\")"},{"path":"/reference/clas_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"An example of a classification model explainer — clas_exp","title":"An example of a classification model explainer — clas_exp","text":"example model explainer (created using DALEX package) classification problem.","code":""},{"path":"/reference/clas_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example of a classification model explainer — clas_exp","text":"","code":"data(clas_exp)"},{"path":"/reference/clas_exp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example of a classification model explainer — clas_exp","text":"list containing model related information.","code":""},{"path":"/reference/predict_spatial_parts.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict spatial parts — predict_spatial_parts","title":"Predict spatial parts — predict_spatial_parts","text":"function calculates attributions model (Break , SHAP, Oscillations explanations) observation raster. Model predictions decomposed parts attributed particular variables, attributions assigned corresponding cells raster. See documentation DALEX::predict_parts() function details.","code":""},{"path":"/reference/predict_spatial_parts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict spatial parts — predict_spatial_parts","text":"","code":"predict_spatial_parts(   explainer,   raster_obs,   maxcell = 1000,   ...,   N = if (substr(type, 1, 4) == \"osci\") 500 else NULL,   type = \"break_down\" )"},{"path":"/reference/predict_spatial_parts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict spatial parts — predict_spatial_parts","text":"explainer model explained, preprocessed DALEX::explain() function raster_obs raster object observations explained (predictors used model) maxcell maximum number cells raster. number cells raster greater maxcell, function sample maxcell cells raster. default 1000 ... parameters passed iBreakDown::break_down() N maximum number observations used calculation attributions. default NULL (use ) 500 (oscillations) type type variable attributions. Either shap, oscillations, oscillations_uni, oscillations_emp, break_down break_down_interactions","code":""},{"path":"/reference/predict_spatial_parts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict spatial parts — predict_spatial_parts","text":"raster object dimensions raster_obs. number layers equal number variables model number variables model plus one type shap.","code":""},{"path":"/reference/predict_spatial_parts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predict spatial parts — predict_spatial_parts","text":"Lundberg, S. (2017). unified approach interpreting model predictions. arXiv preprint arXiv:1705.07874. Staniak, M., & Biecek, P. (2018). Explanations model predictions live breakDown packages. arXiv preprint arXiv:1804.01955. Biecek, P., & Burzykowski, T. (2021). Explanatory model analysis: explore, explain, examine predictive models. Chapman Hall/CRC.","code":""},{"path":"/reference/predict_spatial_parts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict spatial parts — predict_spatial_parts","text":"","code":"library(terra) #> terra 1.7.83 predictors_agg = rast(system.file(\"raster/predictors_agg.tif\", package = \"spatialexplain\")) data(\"regr_exp\", package = \"spatialexplain\") regr_psp_bd = predict_spatial_parts(regr_exp, predictors_agg, maxcell = 100) plot(regr_psp_bd)"},{"path":"/reference/predict_spatial_surrogate.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict spatial surrogate — predict_spatial_surrogate","title":"Predict spatial surrogate — predict_spatial_surrogate","text":"observation raster, function returns explanation model prediction using selected implementation LIME (Local Interpretable Model-agnostic Explanations) method.","code":""},{"path":"/reference/predict_spatial_surrogate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict spatial surrogate — predict_spatial_surrogate","text":"","code":"predict_spatial_surrogate(   explainer,   raster_obs,   maxcell = 1000,   ...,   type = \"localModel\" )"},{"path":"/reference/predict_spatial_surrogate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict spatial surrogate — predict_spatial_surrogate","text":"explainer model explained, preprocessed DALEX::explain() function raster_obs raster object observations explained (predictors used model) maxcell maximum number cells raster. number cells raster greater maxcell, function sample maxcell cells raster. default 1000 ... additional parameters passed DALEXtra::predict_surrogate() function type type LIME method implementation. Possible values : \"localModel\" (default), \"iml\", \"lime\"","code":""},{"path":"/reference/predict_spatial_surrogate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict spatial surrogate — predict_spatial_surrogate","text":"raster object dimensions raster_obs. number layers may vary depending type LIME method implementation","code":""},{"path":"/reference/predict_spatial_surrogate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict spatial surrogate — predict_spatial_surrogate","text":"","code":"library(terra) predictors_agg = rast(system.file(\"raster/predictors_agg.tif\", package = \"spatialexplain\")) data(\"regr_exp\", package = \"spatialexplain\") regr_pss_lm = predict_spatial_surrogate(regr_exp, predictors_agg, maxcell = 20) plot(regr_pss_lm)"},{"path":"/reference/regr_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"An example of a regression model explainer — regr_exp","title":"An example of a regression model explainer — regr_exp","text":"example model explainer (created using DALEX package) regression problem.","code":""},{"path":"/reference/regr_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example of a regression model explainer — regr_exp","text":"","code":"data(regr_exp)"},{"path":"/reference/regr_exp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example of a regression model explainer — regr_exp","text":"list containing model related information.","code":""},{"path":"/reference/spatialexplain-package.html","id":null,"dir":"Reference","previous_headings":"","what":"spatialexplain: Explore and Explain Spatial Machine Learning Models — spatialexplain-package","title":"spatialexplain: Explore and Explain Spatial Machine Learning Models — spatialexplain-package","text":"Provides model agnostic tools exploring explaining spatial machine learning models. based 'DALEX' package uses 'terra' package spatial raster data handling.","code":""},{"path":"/reference/spatialexplain-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"spatialexplain: Explore and Explain Spatial Machine Learning Models — spatialexplain-package","text":"Maintainer: Jakub Nowosad nowosad.jakub@gmail.com (ORCID)","code":""},{"path":"/news/index.html","id":"spatialexplain-001","dir":"Changelog","previous_headings":"","what":"spatialexplain 0.0.1","title":"spatialexplain 0.0.1","text":"Initial version package","code":""}]
